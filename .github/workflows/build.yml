name: Build

on: [push]

jobs:
  build:
  
    strategy:
        matrix:
          include:
            - build-name: 'Windows'
              python-version: 3.9
              platform: windows-latest
              arch: 'x64'
            - build-name: 'macOS'
              python-version: 3.9
              platform: macos-latest
              arch: 'x64'
            - build-name: 'Ubuntu'
              python-version: 3.9
              platform: ubuntu-latest
              arch: 'x64'
    
    name: ${{ matrix.build-name }}
    
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        python -m pip install PyInstaller
        python -m pip install webrtcvad
        python -m pip install -r requirements.txt
    - name: Build
      shell: bash
      run: |
        mkdir -p dist/migaku_mpv
        pyinstaller -F --distpath dist/migaku_mpv -n migaku_mpv -i icon.ico migaku_mpv.py
        cp -r icons modules main.lua migaku_mpv.cfg migaku_mpv.html dist/migaku_mpv/
    - name: Build (ffsubsync)
      shell: bash
      run: |
        echo -e "import ffsubsync\nffsubsync.main()" > build_ffsubsync.py
        pyinstaller -D --workpath build_ffsubsync --distpath dist/migaku_mpv -n ffsubsync build_ffsubsync.py
    - name: Include ffmpeg (macOS/Linux)
      if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      shell: bash
      run: |
        wget -O ffmpeg.zip "http://dicts.migaku.io/ffmpeg/${{ runner.os }}"
        unzip ffmpeg.zip -d dist/migaku_mpv
    - name: Include ffmpeg (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: |
        Invoke-WebRequest "http://dicts.migaku.io/ffmpeg/${{ runner.os }}" -OutFile ffmpeg.zip
        Expand-Archive ffmpeg.zip -DestinationPath dist\migaku_mpv
    - name: Tar (macOS/Linux)
      if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      run: |
        cd dist
        tar -czvf ../build-${{ matrix.platform }}.tar.gz ./*
        cd ..
    - name: Upload artifacts (Windows)
      if: ${{ runner.os == 'Windows' }}
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.platform }}-${{ matrix.arch }}
        path: dist/*
    - name: Upload artifacts (macOS/Linux)
      if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.platform }}-${{ matrix.arch }}
        path: build-${{ matrix.platform }}.tar.gz
