name: Build Release

on: 
  push:
    tags:
    - '*'

jobs:

  build-bin:
  
    strategy:
        matrix:
          include:
            - build-name: 'Windows'
              python-version: 3.9
              platform: windows-latest
              arch: 'x64'
            - build-name: 'macOS'
              python-version: 3.9
              platform: macos-latest
              arch: 'x64'
            - build-name: 'Ubuntu'
              python-version: 3.9
              platform: ubuntu-latest
              arch: 'x64'
    
    name: ${{ matrix.build-name }}
    
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Set env
      shell: bash
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set version
      shell: bash
      run: |
        sed -i -e 's/{{VERSION}}/${{ env.RELEASE_VERSION }}/g' migaku_mpv.html
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        python -m pip install PyInstaller
        python -m pip install webrtcvad
        python -m pip install -r requirements.txt
    - name: Build
      shell: bash
      run: |
        mkdir -p dist/migaku_mpv
        pyinstaller -F --distpath dist/migaku_mpv -n migaku_mpv -i icon.ico migaku_mpv.py
        cp -r icons modules main.lua migaku_mpv.cfg migaku_mpv.html dist/migaku_mpv/
    - name: Build (rubysubs)
      shell: bash
      run: |
        echo -e "import rubysubs.__main__\nrubysubs.__main__.main()" > build_rubysubs.py
        pyinstaller -D --workpath build_rubysubs --distpath dist/migaku_mpv -n rubysubs build_rubysubs.py
    - name: Build (ffsubsync)
      shell: bash
      run: |
        echo -e "import ffsubsync\nffsubsync.main()" > build_ffsubsync.py
        pyinstaller -D --workpath build_ffsubsync --distpath dist/migaku_mpv -n ffsubsync build_ffsubsync.py
    - name: Include ffmpeg (macOS/Linux)
      if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      shell: bash
      run: |
        wget -O ffmpeg.zip "http://dicts.migaku.io/ffmpeg/${{ runner.os }}"
        unzip ffmpeg.zip -d dist/migaku_mpv
        chmod +x dist/migaku_mpv/ffmpeg
    - name: Include ffmpeg (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: |
        Invoke-WebRequest "http://dicts.migaku.io/ffmpeg/${{ runner.os }}" -OutFile ffmpeg.zip
        Expand-Archive ffmpeg.zip -DestinationPath dist\migaku_mpv
    - name: Tar (macOS/Linux)
      if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      shell: bash
      run: |
        mkdir dist_compressed
        cd dist
        tar -czvf ../dist_compressed/migaku-mpv-${{ env.RELEASE_VERSION }}-${{ matrix.build-name }}.tar.gz ./*
        cd ..
    - name: Zip (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: |
        mkdir dist_compressed
        Compress-Archive -Path dist\migaku_mpv -DestinationPath dist_compressed\migaku-mpv-${{ env.RELEASE_VERSION }}-${{ matrix.build-name }}.zip
    - name: Upload artifacts
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist_compressed/*"
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}


  build-src:
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Set env
      shell: bash
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Copy files
      shell: bash
      run: |
        mkdir -p dist/migaku_mpv
        cp -r icons modules utils main.lua migaku_mpv.cfg migaku_mpv.py migaku_mpv.html requirements.txt dist/migaku_mpv/
    - name: Tar
      shell: bash
      run: |
        mkdir dist_compressed
        cd dist
        tar -czvf ../dist_compressed/migaku-mpv-${{ env.RELEASE_VERSION }}-Python.tar.gz ./*
        cd ..
    - name: Upload artifacts
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist_compressed/*"
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
